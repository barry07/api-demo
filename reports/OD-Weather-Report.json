{
  "stats": {
    "suites": 4,
    "tests": 24,
    "passes": 15,
    "pending": 0,
    "failures": 9,
    "start": "2025-10-04T04:12:05.524Z",
    "end": "2025-10-04T04:12:47.948Z",
    "duration": 42424,
    "testsRegistered": 24,
    "passPercent": 62.5,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "966b8780-b38c-47da-9001-5fdc03a4187f",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6c8830f8-123c-4ce4-b38b-3f508dec084a",
          "title": "ODWeather API - getAemetStation - endpoint",
          "fullFile": "C:\\Users\\Admin\\projects\\api-demo\\test\\1.getAemetStation.test.js",
          "file": "\\test\\1.getAemetStation.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return latest data matching schema",
              "fullTitle": "ODWeather API - getAemetStation - endpoint should return latest data matching schema",
              "timedOut": false,
              "duration": 1453,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Use the correct endpoint\nconst responsePromise = request('https://api.oceandrivers.com')\n  .get('/v1.0/getAemetStation/aeropuertopalma/lastdata/'); \n// Assert HTTP status\nawait expect(responsePromise).to.eventually.have.property('status', 200);\nconst res = await responsePromise;\n// Response is an object containing fields, not an array\nexpect(res.body).to.be.an('object');\n// Validate against schema\nconst validate = ajv.compile(aemetSchema);\nconst valid = validate(res.body);\nif (!valid) {\n  console.error('Schema validation errors:', validate.errors);\n}\nexpect(valid).to.be.true;",
              "err": {
                "message": "AssertionError: expected false to be true",
                "estack": "AssertionError: expected false to be true\n    at Context.<anonymous> (test\\1.getAemetStation.test.js:28:24)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)",
                "diff": "- false\n+ true\n"
              },
              "uuid": "cfaa6b55-6c2e-4494-b521-fdd98d51d4ef",
              "parentUUID": "6c8830f8-123c-4ce4-b38b-3f508dec084a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "cfaa6b55-6c2e-4494-b521-fdd98d51d4ef"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1453,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f2cd65df-1567-4e89-b411-0febf7fbf707",
          "title": "ODWeather API - getSocibWeatherStation - endpoint",
          "fullFile": "C:\\Users\\Admin\\projects\\api-demo\\test\\2.getSocibWeatherStation.test.js",
          "file": "\\test\\2.getSocibWeatherStation.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return 200 response for valid bouy stations boyaenderrocat ",
              "fullTitle": "ODWeather API - getSocibWeatherStation - endpoint should return 200 response for valid bouy stations boyaenderrocat ",
              "timedOut": false,
              "duration": 1982,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const responsePromise = request(BASE_URL)\n  .get(`${API_PREFIX}${stationId}/latestdata/`);\nawait expect(responsePromise).to.eventually.have.property('status', 200);\nconst res = await responsePromise;\n// Basic sanity check\nexpect(res.body).to.be.an('object');",
              "err": {
                "message": "AssertionError: expected Response{ _events: {}, …(34), …(2) } to have property 'status' of 200, but got 500",
                "estack": "AssertionError: expected Response{ _events: {}, …(34), …(2) } to have property 'status' of 200, but got 500\n    at C:\\Users\\Admin\\projects\\api-demo\\node_modules\\chai-as-promised\\lib\\chai-as-promised.js:302:22\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Context.<anonymous> (test\\2.getSocibWeatherStation.test.js:21:7)",
                "diff": "- 500\n+ 200\n"
              },
              "uuid": "b8c0450c-bdd8-4a57-aaba-bb70a5c93fa2",
              "parentUUID": "f2cd65df-1567-4e89-b411-0febf7fbf707",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 200 response for valid bouy stations playadepalma",
              "fullTitle": "ODWeather API - getSocibWeatherStation - endpoint should return 200 response for valid bouy stations playadepalma",
              "timedOut": false,
              "duration": 1990,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const responsePromise = request(BASE_URL)\n  .get(`${API_PREFIX}${stationId}/latestdata/`);\nawait expect(responsePromise).to.eventually.have.property('status', 200);\nconst res = await responsePromise;\n// Basic sanity check\nexpect(res.body).to.be.an('object');",
              "err": {
                "message": "AssertionError: expected Response{ _events: {}, …(34), …(2) } to have property 'status' of 200, but got 500",
                "estack": "AssertionError: expected Response{ _events: {}, …(34), …(2) } to have property 'status' of 200, but got 500\n    at C:\\Users\\Admin\\projects\\api-demo\\node_modules\\chai-as-promised\\lib\\chai-as-promised.js:302:22\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Context.<anonymous> (test\\2.getSocibWeatherStation.test.js:21:7)",
                "diff": "- 500\n+ 200\n"
              },
              "uuid": "a3f4d27b-0c1a-40d2-afd6-b72313c87224",
              "parentUUID": "f2cd65df-1567-4e89-b411-0febf7fbf707",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 404 response for invalid bouy stations shannon",
              "fullTitle": "ODWeather API - getSocibWeatherStation - endpoint should return 404 response for invalid bouy stations shannon",
              "timedOut": false,
              "duration": 2006,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const responsePromise = request(BASE_URL)\n  .get(`${API_PREFIX}${stationId}/latestdata/`);\nawait expect(responsePromise).to.eventually.have.property('status', 404);\nconst res = await responsePromise;\n// Basic sanity check\nexpect(res.body).to.be.an('object');",
              "err": {
                "message": "AssertionError: expected Response{ _events: {}, …(34), …(2) } to have property 'status' of 404, but got 500",
                "estack": "AssertionError: expected Response{ _events: {}, …(34), …(2) } to have property 'status' of 404, but got 500\n    at C:\\Users\\Admin\\projects\\api-demo\\node_modules\\chai-as-promised\\lib\\chai-as-promised.js:302:22\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Context.<anonymous> (test\\2.getSocibWeatherStation.test.js:35:7)",
                "diff": "- 500\n+ 404\n"
              },
              "uuid": "211bf10c-786f-4614-94bc-c8316bbf6334",
              "parentUUID": "f2cd65df-1567-4e89-b411-0febf7fbf707",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 404 response for invalid bouy stations derry",
              "fullTitle": "ODWeather API - getSocibWeatherStation - endpoint should return 404 response for invalid bouy stations derry",
              "timedOut": false,
              "duration": 2031,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const responsePromise = request(BASE_URL)\n  .get(`${API_PREFIX}${stationId}/latestdata/`);\nawait expect(responsePromise).to.eventually.have.property('status', 404);\nconst res = await responsePromise;\n// Basic sanity check\nexpect(res.body).to.be.an('object');",
              "err": {
                "message": "AssertionError: expected Response{ _events: {}, …(34), …(2) } to have property 'status' of 404, but got 500",
                "estack": "AssertionError: expected Response{ _events: {}, …(34), …(2) } to have property 'status' of 404, but got 500\n    at C:\\Users\\Admin\\projects\\api-demo\\node_modules\\chai-as-promised\\lib\\chai-as-promised.js:302:22\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Context.<anonymous> (test\\2.getSocibWeatherStation.test.js:35:7)",
                "diff": "- 500\n+ 404\n"
              },
              "uuid": "17f97e26-16cd-4f49-96c2-e0c0e5009dc6",
              "parentUUID": "f2cd65df-1567-4e89-b411-0febf7fbf707",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 404 response for invalid bouy stations nonexistentstation",
              "fullTitle": "ODWeather API - getSocibWeatherStation - endpoint should return 404 response for invalid bouy stations nonexistentstation",
              "timedOut": false,
              "duration": 1382,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const responsePromise = request(BASE_URL)\n  .get(`${API_PREFIX}${stationId}/latestdata/`);\nawait expect(responsePromise).to.eventually.have.property('status', 404);\nconst res = await responsePromise;\n// Basic sanity check\nexpect(res.body).to.be.an('object');",
              "err": {
                "message": "AssertionError: expected Response{ _events: {}, …(34), …(2) } to have property 'status' of 404, but got 500",
                "estack": "AssertionError: expected Response{ _events: {}, …(34), …(2) } to have property 'status' of 404, but got 500\n    at C:\\Users\\Admin\\projects\\api-demo\\node_modules\\chai-as-promised\\lib\\chai-as-promised.js:302:22\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Context.<anonymous> (test\\2.getSocibWeatherStation.test.js:35:7)",
                "diff": "- 500\n+ 404\n"
              },
              "uuid": "52df6f44-2900-4d10-bfc8-bc545b556db1",
              "parentUUID": "f2cd65df-1567-4e89-b411-0febf7fbf707",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b8c0450c-bdd8-4a57-aaba-bb70a5c93fa2",
            "a3f4d27b-0c1a-40d2-afd6-b72313c87224",
            "211bf10c-786f-4614-94bc-c8316bbf6334",
            "17f97e26-16cd-4f49-96c2-e0c0e5009dc6",
            "52df6f44-2900-4d10-bfc8-bc545b556db1"
          ],
          "pending": [],
          "skipped": [],
          "duration": 9391,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "94df322b-d43b-4a00-8cd6-21c476aa278e",
          "title": "ODWeather API - getEasyWind - endpoint",
          "fullFile": "C:\\Users\\Admin\\projects\\api-demo\\test\\4.getEasyWind.test.js",
          "file": "\\test\\4.getEasyWind.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return 200 response for valid stations EW013",
              "fullTitle": "ODWeather API - getEasyWind - endpoint should return 200 response for valid stations EW013",
              "timedOut": false,
              "duration": 1256,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responsePromise = request(BASE_URL)\n  .get(`${API_PREFIX}${stationId}/?period=latestdata/`);\nawait expect(responsePromise).to.eventually.have.property('status', 200);\nconst res = await responsePromise;\n// Basic sanity check\nexpect(res.body).to.be.an('object');",
              "err": {},
              "uuid": "038b8bf9-22c6-4abf-b879-c5e15400de21",
              "parentUUID": "94df322b-d43b-4a00-8cd6-21c476aa278e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 200 response for valid stations EW008",
              "fullTitle": "ODWeather API - getEasyWind - endpoint should return 200 response for valid stations EW008",
              "timedOut": false,
              "duration": 1636,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responsePromise = request(BASE_URL)\n  .get(`${API_PREFIX}${stationId}/?period=latestdata/`);\nawait expect(responsePromise).to.eventually.have.property('status', 200);\nconst res = await responsePromise;\n// Basic sanity check\nexpect(res.body).to.be.an('object');",
              "err": {},
              "uuid": "51fbf73d-adff-417b-9c78-0f905193b15b",
              "parentUUID": "94df322b-d43b-4a00-8cd6-21c476aa278e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error for an invalid station shannon",
              "fullTitle": "ODWeather API - getEasyWind - endpoint should return error for an invalid station shannon",
              "timedOut": false,
              "duration": 1895,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responsePromise = request(BASE_URL)\n  .get(`${API_PREFIX}${stationId}/?period=latestdata/`);\n  \nawait expect(responsePromise).to.eventually.have.property('status', 200);\nconst res = await responsePromise;\nexpect(res.body).to.be.an('object');\nexpect(res.body).to.have.property('error');\nexpect(res.body.error).to.match(/not implemented/i);",
              "err": {},
              "uuid": "e86fdcb9-4236-44c5-8097-94967508755d",
              "parentUUID": "94df322b-d43b-4a00-8cd6-21c476aa278e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error for an invalid station derry",
              "fullTitle": "ODWeather API - getEasyWind - endpoint should return error for an invalid station derry",
              "timedOut": false,
              "duration": 1887,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responsePromise = request(BASE_URL)\n  .get(`${API_PREFIX}${stationId}/?period=latestdata/`);\n  \nawait expect(responsePromise).to.eventually.have.property('status', 200);\nconst res = await responsePromise;\nexpect(res.body).to.be.an('object');\nexpect(res.body).to.have.property('error');\nexpect(res.body.error).to.match(/not implemented/i);",
              "err": {},
              "uuid": "8edbb483-4ce3-49df-ab52-a8b602f679f5",
              "parentUUID": "94df322b-d43b-4a00-8cd6-21c476aa278e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error for an invalid station nonexistentstation",
              "fullTitle": "ODWeather API - getEasyWind - endpoint should return error for an invalid station nonexistentstation",
              "timedOut": false,
              "duration": 1259,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responsePromise = request(BASE_URL)\n  .get(`${API_PREFIX}${stationId}/?period=latestdata/`);\n  \nawait expect(responsePromise).to.eventually.have.property('status', 200);\nconst res = await responsePromise;\nexpect(res.body).to.be.an('object');\nexpect(res.body).to.have.property('error');\nexpect(res.body.error).to.match(/not implemented/i);",
              "err": {},
              "uuid": "0f373785-0d81-4bde-ae57-556b54fab676",
              "parentUUID": "94df322b-d43b-4a00-8cd6-21c476aa278e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 200 response for valid periods latestdata",
              "fullTitle": "ODWeather API - getEasyWind - endpoint should return 200 response for valid periods latestdata",
              "timedOut": false,
              "duration": 1901,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responsePromise = request(BASE_URL)\n  .get(`${API_PREFIX}EW013/?period=${period}/`);\nawait expect(responsePromise).to.eventually.have.property('status', 200);\nconst res = await responsePromise;\n// Basic sanity check\nexpect(res.body).to.be.an('object');",
              "err": {},
              "uuid": "d69ea747-23f8-4325-969d-0c9cc9dd659e",
              "parentUUID": "94df322b-d43b-4a00-8cd6-21c476aa278e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 200 response for valid periods latestday",
              "fullTitle": "ODWeather API - getEasyWind - endpoint should return 200 response for valid periods latestday",
              "timedOut": false,
              "duration": 1855,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responsePromise = request(BASE_URL)\n  .get(`${API_PREFIX}EW013/?period=${period}/`);\nawait expect(responsePromise).to.eventually.have.property('status', 200);\nconst res = await responsePromise;\n// Basic sanity check\nexpect(res.body).to.be.an('object');",
              "err": {},
              "uuid": "b7d92ed6-1194-48ef-ab79-eb0ff4e809c1",
              "parentUUID": "94df322b-d43b-4a00-8cd6-21c476aa278e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 200 response for valid periods latesthour",
              "fullTitle": "ODWeather API - getEasyWind - endpoint should return 200 response for valid periods latesthour",
              "timedOut": false,
              "duration": 1276,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responsePromise = request(BASE_URL)\n  .get(`${API_PREFIX}EW013/?period=${period}/`);\nawait expect(responsePromise).to.eventually.have.property('status', 200);\nconst res = await responsePromise;\n// Basic sanity check\nexpect(res.body).to.be.an('object');",
              "err": {},
              "uuid": "424791bd-588a-42b2-ab89-d303ae60d55b",
              "parentUUID": "94df322b-d43b-4a00-8cd6-21c476aa278e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error for invalid periods latestminute",
              "fullTitle": "ODWeather API - getEasyWind - endpoint should return error for invalid periods latestminute",
              "timedOut": false,
              "duration": 1634,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responsePromise = request(BASE_URL)\n  .get(`${API_PREFIX}EW013/?period=${period}/`);\nawait expect(responsePromise).to.eventually.have.property('status', 200);\nconst res = await responsePromise;\nexpect(res.body).to.be.an('object');\nexpect(res.body).to.have.property('error');\nexpect(res.body.error).to.match(/not implemented/i);",
              "err": {},
              "uuid": "8aa49bf7-caf2-4359-8ecf-545954302c35",
              "parentUUID": "94df322b-d43b-4a00-8cd6-21c476aa278e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error for invalid periods latestsecond",
              "fullTitle": "ODWeather API - getEasyWind - endpoint should return error for invalid periods latestsecond",
              "timedOut": false,
              "duration": 1868,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responsePromise = request(BASE_URL)\n  .get(`${API_PREFIX}EW013/?period=${period}/`);\nawait expect(responsePromise).to.eventually.have.property('status', 200);\nconst res = await responsePromise;\nexpect(res.body).to.be.an('object');\nexpect(res.body).to.have.property('error');\nexpect(res.body.error).to.match(/not implemented/i);",
              "err": {},
              "uuid": "79a6fbf7-c527-44d9-8681-fb834c447540",
              "parentUUID": "94df322b-d43b-4a00-8cd6-21c476aa278e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return error for invalid periods latesth0ur",
              "fullTitle": "ODWeather API - getEasyWind - endpoint should return error for invalid periods latesth0ur",
              "timedOut": false,
              "duration": 1863,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responsePromise = request(BASE_URL)\n  .get(`${API_PREFIX}EW013/?period=${period}/`);\nawait expect(responsePromise).to.eventually.have.property('status', 200);\nconst res = await responsePromise;\nexpect(res.body).to.be.an('object');\nexpect(res.body).to.have.property('error');\nexpect(res.body.error).to.match(/not implemented/i);",
              "err": {},
              "uuid": "aaee9243-b581-436f-8cf5-671637437963",
              "parentUUID": "94df322b-d43b-4a00-8cd6-21c476aa278e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "038b8bf9-22c6-4abf-b879-c5e15400de21",
            "51fbf73d-adff-417b-9c78-0f905193b15b",
            "e86fdcb9-4236-44c5-8097-94967508755d",
            "8edbb483-4ce3-49df-ab52-a8b602f679f5",
            "0f373785-0d81-4bde-ae57-556b54fab676",
            "d69ea747-23f8-4325-969d-0c9cc9dd659e",
            "b7d92ed6-1194-48ef-ab79-eb0ff4e809c1",
            "424791bd-588a-42b2-ab89-d303ae60d55b",
            "8aa49bf7-caf2-4359-8ecf-545954302c35",
            "79a6fbf7-c527-44d9-8681-fb834c447540",
            "aaee9243-b581-436f-8cf5-671637437963"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18330,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "af9e3148-3a82-4407-a2c7-f306190796e5",
          "title": "ODWeather API — getAemetStation - Endpoint",
          "fullFile": "C:\\Users\\Admin\\projects\\api-demo\\test\\weather.test.js",
          "file": "\\test\\weather.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return 200 OK for a valid station ID: aeropuertopalma",
              "fullTitle": "ODWeather API — getAemetStation - Endpoint should return 200 OK for a valid station ID: aeropuertopalma",
              "timedOut": false,
              "duration": 1958,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(BASE_URL)\n  .get(`${API_PREFIX}${stationId}/lastdata/`) \nexpect(res.status).to.equal(200);\nexpect(res.body).to.be.an(\"object\"); // sanity check",
              "err": {},
              "uuid": "9cdaedca-2b48-4046-8baf-e0de6215cd92",
              "parentUUID": "af9e3148-3a82-4407-a2c7-f306190796e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 404 for an invalid station ID: shannon",
              "fullTitle": "ODWeather API — getAemetStation - Endpoint should return 404 for an invalid station ID: shannon",
              "timedOut": false,
              "duration": 1908,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const res = await request(BASE_URL)\n  .get(`${API_PREFIX}${stationId}/lastdata/`) \nexpect(res.status).to.equal(404);\nexpect(res.body).to.be.an(\"object\");",
              "err": {
                "message": "AssertionError: expected 200 to equal 404",
                "estack": "AssertionError: expected 200 to equal 404\n    at Context.<anonymous> (test\\weather.test.js:37:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)",
                "diff": "- 200\n+ 404\n"
              },
              "uuid": "5626255c-b7f1-4003-a827-6a7d13e0b636",
              "parentUUID": "af9e3148-3a82-4407-a2c7-f306190796e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 404 for an missing station ID:",
              "fullTitle": "ODWeather API — getAemetStation - Endpoint should return 404 for an missing station ID:",
              "timedOut": false,
              "duration": 1903,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(BASE_URL)\n  .get(`${API_PREFIX}/lastdata/`) \nexpect(res.status).to.equal(404);\nexpect(res.body).to.be.an(\"object\");",
              "err": {},
              "uuid": "2d41f73d-8474-4596-a51f-3e56d742e3bf",
              "parentUUID": "af9e3148-3a82-4407-a2c7-f306190796e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 404 for an invalid station ID: derry",
              "fullTitle": "ODWeather API — getAemetStation - Endpoint should return 404 for an invalid station ID: derry",
              "timedOut": false,
              "duration": 1916,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const res = await request(BASE_URL)\n  .get(`${API_PREFIX}${stationId}/lastdata/`) \nexpect(res.status).to.equal(404);\nexpect(res.body).to.be.an(\"object\");",
              "err": {
                "message": "AssertionError: expected 200 to equal 404",
                "estack": "AssertionError: expected 200 to equal 404\n    at Context.<anonymous> (test\\weather.test.js:37:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)",
                "diff": "- 200\n+ 404\n"
              },
              "uuid": "0f9054e3-b123-45e2-9f5a-14bd283f4aa0",
              "parentUUID": "af9e3148-3a82-4407-a2c7-f306190796e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 404 for an missing station ID:",
              "fullTitle": "ODWeather API — getAemetStation - Endpoint should return 404 for an missing station ID:",
              "timedOut": false,
              "duration": 1885,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(BASE_URL)\n  .get(`${API_PREFIX}/lastdata/`) \nexpect(res.status).to.equal(404);\nexpect(res.body).to.be.an(\"object\");",
              "err": {},
              "uuid": "ad722fc5-a19d-49ee-9721-2bd136180977",
              "parentUUID": "af9e3148-3a82-4407-a2c7-f306190796e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 404 for an invalid station ID: nonexistentstation",
              "fullTitle": "ODWeather API — getAemetStation - Endpoint should return 404 for an invalid station ID: nonexistentstation",
              "timedOut": false,
              "duration": 1975,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const res = await request(BASE_URL)\n  .get(`${API_PREFIX}${stationId}/lastdata/`) \nexpect(res.status).to.equal(404);\nexpect(res.body).to.be.an(\"object\");",
              "err": {
                "message": "AssertionError: expected 200 to equal 404",
                "estack": "AssertionError: expected 200 to equal 404\n    at Context.<anonymous> (test\\weather.test.js:37:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)",
                "diff": "- 200\n+ 404\n"
              },
              "uuid": "f0de9758-0f32-4a58-b019-3afdea08ead0",
              "parentUUID": "af9e3148-3a82-4407-a2c7-f306190796e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 404 for an missing station ID:",
              "fullTitle": "ODWeather API — getAemetStation - Endpoint should return 404 for an missing station ID:",
              "timedOut": false,
              "duration": 1624,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await request(BASE_URL)\n  .get(`${API_PREFIX}/lastdata/`) \nexpect(res.status).to.equal(404);\nexpect(res.body).to.be.an(\"object\");",
              "err": {},
              "uuid": "9ac4af6f-2a25-4d4b-9131-8fb6d35a3426",
              "parentUUID": "af9e3148-3a82-4407-a2c7-f306190796e5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9cdaedca-2b48-4046-8baf-e0de6215cd92",
            "2d41f73d-8474-4596-a51f-3e56d742e3bf",
            "ad722fc5-a19d-49ee-9721-2bd136180977",
            "9ac4af6f-2a25-4d4b-9131-8fb6d35a3426"
          ],
          "failures": [
            "5626255c-b7f1-4003-a827-6a7d13e0b636",
            "0f9054e3-b123-45e2-9f5a-14bd283f4aa0",
            "f0de9758-0f32-4a58-b019-3afdea08ead0"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13169,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.7.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "OD-Weather-Report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.4"
    },
    "marge": {
      "options": {
        "reportDir": "reports",
        "reportFilename": "OD-Weather-Report",
        "overwrite": "true",
        "html": "true",
        "json": "true"
      },
      "version": "6.3.0"
    }
  }
}